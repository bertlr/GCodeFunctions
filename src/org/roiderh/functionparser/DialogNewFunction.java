/*
 * Copyright (C) 2016 by Herbert Roider <herbert@roider.at>
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.roiderh.functionparser;

import java.text.ParseException;
import javax.swing.text.Document;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.html.StyleSheet;

/**
 *
 * @author Herbert Roider <herbert@roider.at>
 */
public class DialogNewFunction extends javax.swing.JDialog {

    private FunctionConf[] fc;

    /**
     * Field with the generated g-Code:
     */
    public String g_code;

    private javax.swing.DefaultListModel<String> functionConfigTitles;

    /**
     * Creates new form NewJDialog
     */
    public DialogNewFunction(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public DialogNewFunction(FunctionConf[] _fc, java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.fc = _fc;

        functionConfigTitles = new javax.swing.DefaultListModel<>();
        for (int i = 0; i < fc.length; i++) {
            functionConfigTitles.add(i, this.fc[i].title);
        }
        initComponents();

        textFunctionDesc.setContentType("text/html");
        textFunctionDesc.setEditable(false);
        //textFunctionDesc.setPreferredSize(new Dimension(600, 600));
        HTMLEditorKit kit = new HTMLEditorKit();
        textFunctionDesc.setEditorKit(kit);
        StyleSheet styleSheet = kit.getStyleSheet();
        styleSheet.addRule("body {color:#0000ff; font-family:times; margin: 0px; font: 10px; }");
        styleSheet.addRule("pre {font-family: monospace; color : black; background-color : #f0f0f0; }");
        Document doc = kit.createDefaultDocument();
        textFunctionDesc.setDocument(doc);

        pack();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonOk = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listFunctions = new javax.swing.JList<>();
        jButtonCancel = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        textFunctionDesc = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        org.openide.awt.Mnemonics.setLocalizedText(jButtonOk, org.openide.util.NbBundle.getMessage(DialogNewFunction.class, "DialogNewFunction.jButtonOk.text")); // NOI18N
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        listFunctions.setModel(functionConfigTitles);
        listFunctions.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listFunctions.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listFunctionsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listFunctions);

        org.openide.awt.Mnemonics.setLocalizedText(jButtonCancel, org.openide.util.NbBundle.getMessage(DialogNewFunction.class, "DialogNewFunction.jButtonCancel.text")); // NOI18N
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        textFunctionDesc.setFocusable(false);
        textFunctionDesc.setName(""); // NOI18N
        jScrollPane3.setViewportView(textFunctionDesc);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonOk, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOk)
                    .addComponent(jButtonCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listFunctionsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listFunctionsValueChanged
        int index = listFunctions.getMinSelectionIndex();
        System.out.println("changed: " + index);
        if (index < 0) {
            return;
        }
        //int machine = 0; // spinner
        //Character.isDigit(fc[index].name.charAt(0));

        java.util.ArrayList<String> args = new java.util.ArrayList<>();

        for (int i = 0; i < fc[index].arg.size(); i++) {
            if (fc[index].arg.get(i).type.compareTo("string") == 0) {
                args.add("\"" + fc[index].arg.get(i).defaultval.trim() + "\"");
            } else {
                args.add(fc[index].arg.get(i).defaultval.trim());
            }

        }
        g_code = "";
        if (Character.isDigit(fc[index].name.charAt(0))) {
            // emco:
            for (int i = 0; i < fc[index].arg.size(); i++) {
                if (i % 3 == 0 && i > 0) {
                    g_code += "\n";
                }
                g_code += fc[index].arg.get(i).name + "=" + args.get(i) + " ";
            }
            g_code += "\nL" + fc[index].name + " P1\n";

        } else {
            // spinner:

            g_code += fc[index].name + "(";
            g_code += String.join(", ", args);
            g_code += ")\n";

        }

        textFunctionDesc.setText("<p>" + fc[index].desc + "</p>\n<pre>" + g_code + "</pre>");
    }//GEN-LAST:event_listFunctionsValueChanged

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.g_code = "";
        this.setVisible(false);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogNewFunction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogNewFunction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogNewFunction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogNewFunction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogNewFunction dialog = new DialogNewFunction(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listFunctions;
    private javax.swing.JEditorPane textFunctionDesc;
    // End of variables declaration//GEN-END:variables
}
